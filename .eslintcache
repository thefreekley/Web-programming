[{"C:\\rubbish\\Web Lab\\lab6\\src\\index.js":"1","C:\\rubbish\\Web Lab\\lab6\\src\\App.js":"2","C:\\rubbish\\Web Lab\\lab6\\src\\reportWebVitals.js":"3","C:\\rubbish\\Web Lab\\lab6\\src\\components\\Header.jsx":"4","C:\\rubbish\\Web Lab\\lab6\\src\\components\\Hat.jsx":"5","C:\\rubbish\\Web Lab\\lab6\\src\\components\\pages\\HomePage.jsx":"6","C:\\rubbish\\Web Lab\\lab6\\src\\components\\Footer.jsx":"7","C:\\rubbish\\Web Lab\\lab6\\src\\components\\pages\\CatalogPage.jsx":"8","C:\\rubbish\\Web Lab\\lab6\\src\\components\\Button.jsx":"9","C:\\rubbish\\Web Lab\\lab6\\src\\components\\pages\\ItemPage.jsx":"10","C:\\rubbish\\Web Lab\\lab6\\src\\components\\pages\\CartPage.jsx":"11","C:\\rubbish\\Web Lab\\lab6\\src\\components\\boxes\\HomeBox.jsx":"12","C:\\rubbish\\Web Lab\\lab6\\src\\components\\boxes\\CatalogBox.jsx":"13","C:\\rubbish\\Web Lab\\lab6\\src\\components\\boxes\\CartBox.jsx":"14","C:\\rubbish\\Web Lab\\lab6\\src\\redux\\store.js":"15","C:\\rubbish\\Web Lab\\lab6\\src\\redux\\reducers\\filters.js":"16","C:\\rubbish\\Web Lab\\lab6\\src\\components\\Select.jsx":"17","C:\\rubbish\\Web Lab\\lab6\\src\\components\\Input.jsx":"18","C:\\rubbish\\Web Lab\\lab6\\src\\redux\\reducers\\printers.js":"19","C:\\rubbish\\Web Lab\\lab6\\src\\redux\\reducers\\index.js":"20","C:\\rubbish\\Web Lab\\lab6\\src\\redux\\actions\\printers.js":"21","C:\\rubbish\\Web Lab\\lab6\\src\\redux\\actions\\filters.js":"22","C:\\rubbish\\Web Lab\\lab6\\src\\redux\\reducers\\cart.js":"23","C:\\rubbish\\Web Lab\\lab6\\src\\redux\\actions\\cart.js":"24","C:\\rubbish\\Web Lab\\lab6\\src\\redux\\controller\\cartController.js":"25","C:\\rubbish\\Web Lab\\lab6\\src\\redux\\reducers\\category.js":"26","C:\\rubbish\\Web Lab\\lab6\\src\\redux\\actions\\category.js":"27","C:\\rubbish\\Web Lab\\lab6\\src\\components\\pages\\CheckoutPage.jsx":"28","C:\\rubbish\\Web Lab\\lab6\\src\\components\\boxes\\ErrorBox.jsx":"29","C:\\rubbish\\Web Lab\\lab6\\src\\components\\pages\\SuccessPage.jsx":"30","C:\\rubbish\\Web Lab\\lab6\\src\\components\\loading-blocks\\LoaderCatalogBox.jsx":"31"},{"size":477,"mtime":1607435560521,"results":"32","hashOfConfig":"33"},{"size":1411,"mtime":1607976048472,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":2907,"mtime":1607602172321,"results":"36","hashOfConfig":"33"},{"size":255,"mtime":1607321121006,"results":"37","hashOfConfig":"33"},{"size":3089,"mtime":1607980934860,"results":"38","hashOfConfig":"33"},{"size":520,"mtime":1607323075049,"results":"39","hashOfConfig":"33"},{"size":10371,"mtime":1608036333349,"results":"40","hashOfConfig":"33"},{"size":1135,"mtime":1607964052408,"results":"41","hashOfConfig":"33"},{"size":4113,"mtime":1607956411035,"results":"42","hashOfConfig":"33"},{"size":1909,"mtime":1607968572598,"results":"43","hashOfConfig":"33"},{"size":1489,"mtime":1607590857873,"results":"44","hashOfConfig":"33"},{"size":1384,"mtime":1607979735314,"results":"45","hashOfConfig":"33"},{"size":2133,"mtime":1607537740868,"results":"46","hashOfConfig":"33"},{"size":366,"mtime":1607974801732,"results":"47","hashOfConfig":"33"},{"size":946,"mtime":1607505608936,"results":"48","hashOfConfig":"33"},{"size":1168,"mtime":1607590570781,"results":"49","hashOfConfig":"33"},{"size":566,"mtime":1607596836953,"results":"50","hashOfConfig":"33"},{"size":457,"mtime":1607981410161,"results":"51","hashOfConfig":"33"},{"size":395,"mtime":1607601765501,"results":"52","hashOfConfig":"33"},{"size":439,"mtime":1608036333374,"results":"53","hashOfConfig":"33"},{"size":527,"mtime":1607505608942,"results":"54","hashOfConfig":"33"},{"size":894,"mtime":1607595878604,"results":"55","hashOfConfig":"33"},{"size":262,"mtime":1607594772552,"results":"56","hashOfConfig":"33"},{"size":1114,"mtime":1607598703029,"results":"57","hashOfConfig":"33"},{"size":295,"mtime":1607601765506,"results":"58","hashOfConfig":"33"},{"size":98,"mtime":1607600253573,"results":"59","hashOfConfig":"33"},{"size":10899,"mtime":1607967859761,"results":"60","hashOfConfig":"33"},{"size":510,"mtime":1607964784971,"results":"61","hashOfConfig":"33"},{"size":1212,"mtime":1607967592614,"results":"62","hashOfConfig":"33"},{"size":910,"mtime":1607978687034,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"xmbaxp",{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"67"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"67"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"67"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"C:\\rubbish\\Web Lab\\lab6\\src\\index.js",["137"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from \"redux\";\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store} >\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\nexport default store\n\nreportWebVitals();\n",["138","139"],"C:\\rubbish\\Web Lab\\lab6\\src\\App.js",["140","141","142"],"import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport HomePage from \"./components/pages/HomePage\";\nimport CatalogPage from \"./components/pages/CatalogPage\";\nimport ItemPage from \"./components/pages/ItemPage\";\nimport Header from \"./components/Header\";\nimport \"./accets/css/initial/bolds.css\"\nimport \"./accets/css/initial/reset.css\"\nimport \"./accets/css/initial/normalize.css\"\nimport \"./App.css\"\nimport Footer from \"./components/Footer\";\nimport CartPage from \"./components/pages/CartPage\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchPrinters } from \"./redux/actions/printers\";\nimport CheckoutPage from \"./components/pages/CheckoutPage\";\nimport SuccessPage from \"./components/pages/SuccessPage\";\n\n\nfunction App() {\n\n  return (\n      <div>\n          <Router>\n              <Header />\n              <Switch>\n                  <Route path='/' exact component={HomePage} />\n                  <Route path='/catalog' exact component={CatalogPage} />\n                  <Route path='/cart' exact component={CartPage} />\n                  <Route path='/item' exact component={ItemPage} />\n                  <Route path='/checkout' exact component={CheckoutPage} />\n                  <Route path='/success' exact component={SuccessPage} />\n              </Switch>\n\n          </Router>\n          <Footer/>\n      </div>\n  );\n}\n\nexport default App;","C:\\rubbish\\Web Lab\\lab6\\src\\reportWebVitals.js",[],"C:\\rubbish\\Web Lab\\lab6\\src\\components\\Header.jsx",["143","144","145","146","147"],"import React,{useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport logo from '../accets/img/logo.png'\r\nimport triangle from '../accets/img/Shape.svg'\r\nimport '../accets/css/components-style/header.css';\r\nimport cartImg from '../accets/img/cart.png'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeCategory} from \"../redux/actions/category\";\r\n\r\nfunction Header() {\r\n\r\n    const priceAndOverall = useSelector(({cart}) => cart.priceCountOverall);\r\n\r\n    const dispatch = useDispatch();\r\n    const categoryIndex = useSelector(({category}) => category.indexCategory);\r\n\r\n\r\n\r\n    const [itemVal, setcategoryIndex] = React.useState(0);\r\n\r\n    const onSelectItem = (index) => {\r\n        setcategoryIndex(index);\r\n        dispatch(changeCategory(index))\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(window.location.pathname == ('/'))onSelectItem(1)\r\n        else if(~window.location.pathname.indexOf('/catalog'))onSelectItem(2)\r\n        else if(~window.location.pathname.indexOf('/cart'))onSelectItem(3)\r\n\r\n    },[]);\r\n    return (\r\n        <header className=\"header\">\r\n            <nav className=\"header__nav\">\r\n                <a className=\"header__title transition\" href=\"/\">\r\n                    WORLD OF PRINTERS\r\n                    <img alt=\"\" className=\"logo\" src={logo}/>\r\n                </a>\r\n                <div className=\"hat__button\">\r\n                    <a className=\"hat__button_title\" href=\"!#\">Watch the movie</a>\r\n                    <div className=\"hat__button_img\">\r\n                        <img alt=\"Watch the movie\" src={triangle} style={{padding: \"12px\"}}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <ul className=\"category\">\r\n                    <Link to=\"/\" className=\"navbar-logo\">\r\n                        <li onClick={() => onSelectItem(1)}\r\n                            className={categoryIndex === 1 ? 'active category-home transition' : 'category-home transition'}> HOME\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/catalog\" className=\"navbar-logo\">\r\n                        <li onClick={() => onSelectItem(2)}\r\n                            className={categoryIndex === 2 ? 'active category-home transition' : 'category-home transition'}>CATALOG\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/cart\" className=\"navbar-logo\">\r\n                        <li onClick={() => onSelectItem(3)}\r\n                            className={categoryIndex === 3 ? 'active category-home transition' : 'category-home transition'}>\r\n                            CART\r\n                        </li>\r\n                    </Link>\r\n                    <span className=\"header-price-count\">{priceAndOverall.price} UAN</span>\r\n                </ul>\r\n            </nav>\r\n\r\n\r\n\r\n\r\n\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","C:\\rubbish\\Web Lab\\lab6\\src\\components\\Hat.jsx",[],"C:\\rubbish\\Web Lab\\lab6\\src\\components\\pages\\HomePage.jsx",["148"],"import React from 'react';\r\nimport Hat from \"../Hat\";\r\nimport hat from \"../../accets/img/hat.jpg\"\r\nimport musicIMG from \"../../accets/img/music.svg\"\r\nimport steamIMG from \"../../accets/img/steam.svg\"\r\nimport twitchIMG from \"../../accets/img/twitch.svg\"\r\nimport \"../../accets/css/pages-style/home-page.css\"\r\nimport HomeBox from \"../boxes/HomeBox\";\r\nimport Button from \"../Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchPrinters} from \"../../redux/actions/printers\";\r\nimport loading from \"../../accets/img/loading.gif\";\r\n\r\nfunction HomePage() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const items = useSelector(({printers}) => printers.items);\r\n    const isLoaded = useSelector(({printers}) => printers.isLoaded);\r\n\r\n\r\n    React.useEffect(() => {\r\n        if(!items.length)dispatch(fetchPrinters());\r\n    },[]);\r\n\r\n    const [showMore, setShowMore] = React.useState(false)\r\n\r\n    const onShowMore = (flag) => {\r\n        setShowMore(flag);\r\n    }\r\n\r\n    if(!isLoaded) {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <img src={loading} alt=\"loading-img\" className=\"loading-img\"/>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"content\">\r\n                <Hat sendUrl={hat}>\r\n\r\n                    <div className=\"hat__wrapper\">\r\n                        <a className=\"social-network\" href=\"https://www.instagram.com/?hl=uk\"><img alt=\"mus\"\r\n                                                                                                   src={musicIMG}/> Listen\r\n                            us in Apple music</a>\r\n                        <a className=\"social-network\" href=\"https://www.spotify.com/ua/\"><img alt=\"steam\"\r\n                                                                                              src={steamIMG}/>Play\r\n                            with us in Steam</a>\r\n                        <a className=\"social-network\" href=\"https://mail.google.com/mail/u/0/#inbox\"><img alt=\"twitch\"\r\n                                                                                                          src={twitchIMG}/> Watch\r\n                            us in Twitch</a>\r\n                    </div>\r\n\r\n                </Hat>\r\n\r\n\r\n                <div className=\"home-boxes-wrapper\">\r\n                    <p className=\"home-news\">NOVELTY:</p>\r\n                    {\r\n                        items && items.slice(0, showMore ? 10 : 2).map(obj =>\r\n                            <HomeBox\r\n                                key={`${obj.id} ${obj.name}`}\r\n                                obj={obj}\r\n                            />)\r\n                    }\r\n\r\n\r\n                </div>\r\n                <div className=\"home-page-button\">\r\n                    <Button type={\"button\"} onClick={() => onShowMore(!showMore)} align={\"center\"}\r\n                            size={'button--large'}\r\n                            value={\"VIEW MORE\"}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\rubbish\\Web Lab\\lab6\\src\\components\\Footer.jsx",[],"C:\\rubbish\\Web Lab\\lab6\\src\\components\\pages\\CatalogPage.jsx",["149"],"C:\\rubbish\\Web Lab\\lab6\\src\\components\\Button.jsx",["150","151","152","153","154","155","156"],"import React from 'react';\r\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom';\r\nimport \"../accets/css/components-style/button.css\"\r\nimport Header from \"./Header\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport CatalogPage from \"./pages/CatalogPage\";\r\nimport CartPage from \"./pages/CartPage\";\r\nconst SIZES = ['button--standart', 'button--large'];\r\nfunction Button(props) {\r\n\r\n    const checkSize = SIZES.includes(props.size) ? props.size : SIZES[0]\r\n\r\n    const button = () =>{\r\n        return(\r\n            <input\r\n                style={{textAlign:`${props.align}`,width:`${props.width}`}}\r\n                value={props.value}\r\n                className={`${checkSize} button`}\r\n                onClick={props.onClick}\r\n                type={props.type}\r\n\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    if (props.link != null) {\r\n\r\n        return (\r\n            <Link to={{pathname:props.link,\r\n                propsSearch:props.propsItem}}>\r\n                {button()}\r\n            </Link>\r\n\r\n        );\r\n    } else {\r\n        return (\r\n            button()\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","C:\\rubbish\\Web Lab\\lab6\\src\\components\\pages\\ItemPage.jsx",["157","158","159","160"],"import React from 'react';\r\nimport Hat from \"../Hat\";\r\nimport hat from \"../../accets/img/shapka3.jpg\";\r\nimport Button from \"../Button\";\r\nimport \"../../accets/css/pages-style/item-page.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addItem} from \"../../redux/actions/cart\";\r\nimport Input from \"../Input\";\r\nimport Select from \"../Select\";\r\nimport dance from \"../../accets/img/dance.gif\"\r\nimport {changeCategory} from \"../../redux/actions/category\";\r\n\r\n\r\nfunction ItemPage(props) {\r\n    const [stateAmountOfPaint,setStateAmountOfPaint] = React.useState(-1);\r\n    const [stateBoxType,setStateBoxType] = React.useState('BOX TYPE');\r\n\r\n    const onStateAmountOfPaint = (value) => { setStateAmountOfPaint(value)}\r\n    const onSetStateBoxType = (value) => { setStateBoxType(value)}\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const dispatchAddItem = (value,AmountOfPaint,BoxType) =>{\r\n\r\n        if(stateAmountOfPaint==-1){\r\n            alert(\"Enter the amount of paint in the field please!\")\r\n            return\r\n        }\r\n        else if(stateBoxType == 'BOX TYPE'){\r\n            alert(\"Select the type of box please!\")\r\n            return\r\n        }\r\n        else{\r\n            dispatch(addItem(value,AmountOfPaint,BoxType))\r\n        }\r\n\r\n\r\n    }\r\n    if (!props.location.propsSearch){\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"content\">\r\n                    <div className=\"item-page-wrapper\">\r\n                    <Hat sendUrl={hat}/>\r\n                    <img alt=\"\" className=\"catalog-box__image\" src={dance}/>\r\n                    <p>RETURN TO CATALOG</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"content\">\r\n                <Hat sendUrl={hat}/>\r\n\r\n\r\n                <div className=\"item-box\">\r\n                    <div className=\"item-boxe-wrapper-line\"></div>\r\n                    <img alt=\"\" className=\"item-box__image\" src={props.location.propsSearch.img}/>\r\n\r\n                    <div className=\"item-box__info\">\r\n                        <div className=\"item-box__info_text\">\r\n                            <p className=\"item-box-info__name\">{props.location.propsSearch.name}</p>\r\n                            <p className=\"item-box-info__description\">{props.location.propsSearch.description} </p>\r\n                        </div>\r\n                        <div className=\"item-bottom\">\r\n                            <div className=\"item-info\">\r\n                                <p className=\"item-price\">PRICE: {props.location.propsSearch.price} UAN</p>\r\n                                <p className=\"item-type\">TYPE: {props.location.propsSearch.type}</p>\r\n                            </div>\r\n                            <div className=\"item-features\">\r\n                                <Input type=\"number\"  placeholder=\"AMOUNT OF PAINT\" func={(value)=>onStateAmountOfPaint(value)}/>\r\n\r\n                                <Select data={[\"ORIGINAL\", \"SAFE\", \"CHEAP\"]} width={\"235px\"}\r\n                                        value={\"BOX TYPE:\"}  id={\"catalog-page-type\"}\r\n                                        func={(value)=>onSetStateBoxType(value)}\r\n                                />\r\n\r\n                                <Button type={\"button\"} align={\"start\"} value={\"ADD TO CART ⯈\"}\r\n                                        onClick={() => dispatchAddItem(props.location.propsSearch,stateAmountOfPaint,stateBoxType)}\r\n\r\n                                />\r\n                                <Button type={\"button\"} align={\"start\"} value={\" GO BACK ⯇\"} link={\"/catalog\"}   width={\"235px\"}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <p className=\"item-box-date\">\r\n                                {props.location.propsSearch.data}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default ItemPage;","C:\\rubbish\\Web Lab\\lab6\\src\\components\\pages\\CartPage.jsx",[],"C:\\rubbish\\Web Lab\\lab6\\src\\components\\boxes\\HomeBox.jsx",["161","162","163"],"import React from 'react';\r\nimport \"../../accets/css/components-style/home-box.css\"\r\nimport Button from \"../Button\";\r\nimport axios from \"axios\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addItem} from \"../../redux/actions/cart\";\r\nfunction HomeBox({obj}) {\r\n    const dispatch = useDispatch();\r\n    const dispatchAddItem = (value) =>{dispatch(addItem(value))}\r\n\r\n    return (\r\n        <div className=\"home-box\">\r\n            <div className=\"home-boxe-wrapper-line\"></div>\r\n            <img alt=\"\" className=\"home-box__image\" src={obj.img}/>\r\n\r\n                <div className=\"home-box__info\">\r\n                    <div className=\"home-box__info_text\">\r\n                        <p className=\"home-box-info__name\">{obj.name}</p>\r\n                        <p className=\"home-box-info__description\">{obj.description} </p>\r\n                    </div>\r\n                    <div className=\"home-box-bottom\">\r\n                        <div className=\"home-box-buttons\">\r\n                            {/*<Button type={\"button\"} align={\"center\"} value={\"BUY\"} onClick={() => dispatchAddItem(obj)}/>*/}\r\n                            {/*<Button type={\"button\"} align={\"center\"} value={\"MORE INFO\"} link={\"/item\"} propsItem={obj} />*/}\r\n                        </div>\r\n                        <div className=\"home-box-date\">\r\n                            {obj.date}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n);\r\n}\r\n\r\nexport default HomeBox;","C:\\rubbish\\Web Lab\\lab6\\src\\components\\boxes\\CatalogBox.jsx",[],"C:\\rubbish\\Web Lab\\lab6\\src\\components\\boxes\\CartBox.jsx",["164"],"import React from 'react';\r\nimport \"../../accets/css/components-style/cart-box.css\"\r\n\r\nimport Button from \"../Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addItem, removeItem} from \"../../redux/actions/cart\";\r\nfunction CartBox({id,func}) {\r\n\r\n    const onAddItem = (value) =>{\r\n        func(cartItems)\r\n        dispatch(addItem(value))\r\n        setStateCounter(cartItem.count)\r\n    }\r\n    const onRemoveItem = (value) =>{\r\n        func(cartItems)\r\n        dispatch(removeItem(value))\r\n        setStateCounter(cartItem.count)\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    const cartItems = useSelector(({cart}) => cart.cartItems);\r\n    const cartItem = cartItems.find(elem => elem.id == id);\r\n    const [stateCounter,setStateCounter] = React.useState(cartItem.count)\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"cart-box\">\r\n\r\n            <div className=\"cart-box-wrapper-line\"></div>\r\n\r\n            <img alt=\"\" className=\"cart-box__image\" src={cartItem.object.img}/>\r\n\r\n                <div className=\"cart-box__info\">\r\n                    <div className=\"cart-box__info_text\">\r\n                        <p className=\"cart-box__info_name\"> {cartItem.object.name}</p>\r\n                        <p className=\"cart-box-price\"> {cartItem.object.price*cartItem.count} UAN</p>\r\n                    </div>\r\n                    <div>\r\n\r\n                        <div className=\"cart-box-buttons\">\r\n                            <Button type={\"button\"} align={\"center\"} value={\"–\"} width={\"100px\"}\r\n                                    onClick={() => onRemoveItem(cartItem.object)}\r\n                            />\r\n                                <p className=\"cart-total-sum\">{stateCounter}</p>\r\n                            <Button type={\"button\"} align={\"center\"} value={\"+\"} width={\"100px\"}\r\n                                    onClick={() => onAddItem(cartItem.object)}/>\r\n\r\n                        </div>\r\n                        <div className=\"cart-box-date\">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default CartBox;","C:\\rubbish\\Web Lab\\lab6\\src\\redux\\store.js",[],"C:\\rubbish\\Web Lab\\lab6\\src\\redux\\reducers\\filters.js",[],"C:\\rubbish\\Web Lab\\lab6\\src\\components\\Select.jsx",["165"],"import React from \"react\";\r\n\r\n\r\nfunction Select({data,id,func,value,width}) {\r\n\r\n\r\n    const handleChange = ({target:value}) => {\r\n        func && func(value.value)\r\n    }\r\n    function optionWithOutSelected(selected) {\r\n        var new_list = data.filter(item => item!= selected);\r\n        return new_list;\r\n    }\r\n\r\n    return (\r\n\r\n            <label>\r\n                {/*{console.log(optionWithOutSelected(value))}*/}\r\n                <select\r\n                        onChange={handleChange} className=\"button\" id={id}\r\n                        style={{\r\n                            color:\"grey\",\r\n                            fontSize:\"20px\",\r\n                            width:`${width}`\r\n                        }}\r\n                >\r\n                    <option selected={value}> {value} </option>\r\n                    { optionWithOutSelected(value).map(item => (\r\n                        <option\r\n                            key={item}\r\n                            value={item}>\r\n                            { item }\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </label>\r\n    );\r\n}\r\n\r\nexport default Select;","C:\\rubbish\\Web Lab\\lab6\\src\\components\\Input.jsx",[],"C:\\rubbish\\Web Lab\\lab6\\src\\redux\\reducers\\printers.js",[],"C:\\rubbish\\Web Lab\\lab6\\src\\redux\\reducers\\index.js",[],"C:\\rubbish\\Web Lab\\lab6\\src\\redux\\actions\\printers.js",[],"C:\\rubbish\\Web Lab\\lab6\\src\\redux\\actions\\filters.js",[],"C:\\rubbish\\Web Lab\\lab6\\src\\redux\\reducers\\cart.js",[],"C:\\rubbish\\Web Lab\\lab6\\src\\redux\\actions\\cart.js",[],"C:\\rubbish\\Web Lab\\lab6\\src\\redux\\controller\\cartController.js",[],"C:\\rubbish\\Web Lab\\lab6\\src\\redux\\reducers\\category.js",[],"C:\\rubbish\\Web Lab\\lab6\\src\\redux\\actions\\category.js",[],"C:\\rubbish\\Web Lab\\lab6\\src\\components\\pages\\CheckoutPage.jsx",["166"],"import React from 'react';\r\n\r\nimport Hat from \"../Hat\";\r\nimport hat from \"../../accets/img/hat.jpg\";\r\nimport {Formik} from \"formik\";\r\nimport '../../accets/css/pages-style/checkout-page.css'\r\nimport Button from \"../Button\";\r\nimport ErrorBox from \"../boxes/ErrorBox\";\r\nimport { Redirect } from 'react-router'\r\n\r\nfunction СheckoutPage() {\r\n    const [stateErr,setStateErr] = React.useState(true);\r\n\r\n    const onStateErr = (errTriger) => {\r\n        setStateErr(errTriger);\r\n    }\r\n\r\n    function returnBoxError(){\r\n        if(!stateErr)return <ErrorBox closeFunc={()=>onStateErr(true)} />\r\n    }\r\n\r\n    const initialValues = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        address: \"\",\r\n\r\n    };\r\n\r\n    const validate = (values) => {\r\n        let errors = {};\r\n        const regexEmail = /[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[a-zA-Z0-9]+/;\r\n        const regexNoName = /[0-9]/;\r\n        const regexPhone = /^((\\+?3)?8)?0\\d{9}$/;\r\n\r\n        if (!values.email) {\r\n            errors.email = \"Email is required\";\r\n        } else if (!regexEmail.test(values.email)) {\r\n            errors.email = \"Invalid Email\";\r\n        }\r\n\r\n\r\n        if (!values.firstName) {\r\n            errors.firstName = \"First name is required\";\r\n        } else if (regexNoName.test(values.firstName)) {\r\n            errors.firstName = \"First name shouldn't contain numbers\";\r\n        }\r\n\r\n\r\n        if (!values.lastName) {\r\n            errors.lastName = \"Last name is required\";\r\n        } else if (regexNoName.test(values.lastName)) {\r\n            errors.lastName = \"Last name shouldn't contain numbers\";\r\n        }\r\n\r\n\r\n        if (!values.phone) {\r\n            errors.phone = \"Phone name is required\";\r\n        } else if (!regexPhone.test(values.phone)) {\r\n            errors.phone = \"Invalid phone\";\r\n        }\r\n\r\n\r\n        if (!values.address) {\r\n            errors.address = \"Address is required\";\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const submitForm = (values) => {\r\n        console.log(values)\r\n    };\r\n\r\n    const upperCaseName = (name) => {\r\n        return name.substr(0, 1).toUpperCase() + name.substr(1)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"wrapper\">\r\n            <div className=\"content\">\r\n                <Hat sendUrl={hat}/>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validate={validate}\r\n                    onSubmit={submitForm}\r\n                >\r\n                    {(formik) => {\r\n                        const {\r\n                            values,\r\n                            handleChange,\r\n                            handleSubmit,\r\n                            errors,\r\n                            touched,\r\n                            handleBlur,\r\n                            isValid,\r\n                            dirty,\r\n                            isSubmitting\r\n                        } = formik;\r\n                        return (\r\n                            <div className=\"checkout-container\">\r\n                                <h1>CHECKOUT</h1>\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <div className=\"checkout-form\">\r\n                                        <div className=\"form-row\">\r\n                                            <div className=\"form-item\">\r\n                                                <label htmlFor=\"firstName\">First Name</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"firstName\"\r\n                                                    id=\"firstName\"\r\n                                                    value={upperCaseName(values.firstName)}\r\n                                                    onChange={handleChange}\r\n                                                    onBlur={handleBlur}\r\n                                                    className={\r\n                                                        errors.firstName && touched.firstName ? \"input-error\" : null\r\n                                                    }\r\n                                                />\r\n                                                {errors.firstName && touched.firstName && (\r\n                                                    <span className=\"error\">{errors.firstName}</span>\r\n                                                )}\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"form-item\">\r\n                                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"lastName\"\r\n                                                    id=\"lastName\"\r\n                                                    value={upperCaseName(values.lastName)}\r\n                                                    onChange={handleChange}\r\n                                                    onBlur={handleBlur}\r\n                                                    className={\r\n                                                        errors.lastName && touched.lastName ? \"input-error\" : null\r\n                                                    }\r\n                                                />\r\n                                                {errors.lastName && touched.lastName && (\r\n                                                    <span className=\"error\">{errors.lastName}</span>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-row\">\r\n                                            <div className=\"form-item\">\r\n                                                <label htmlFor=\"email\">Email</label>\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    value={values.email.replace(/\\s/g, '')}\r\n                                                    onChange={handleChange}\r\n                                                    onBlur={handleBlur}\r\n                                                    className={\r\n                                                        errors.email && touched.email ? \"input-error\" : null\r\n                                                    }\r\n                                                />\r\n                                                {errors.email && touched.email && (\r\n                                                    <span className=\"error\">{errors.email}</span>\r\n                                                )}\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"form-item\">\r\n                                                <label htmlFor=\"phone\">Phone</label>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    name=\"phone\"\r\n                                                    id=\"phone\"\r\n                                                    value={values.phone}\r\n                                                    onChange={handleChange}\r\n                                                    onBlur={handleBlur}\r\n                                                    className={\r\n                                                        errors.phone && touched.phone ? \"input-error\" : null\r\n                                                    }\r\n                                                />\r\n                                                {errors.phone && touched.phone && (\r\n                                                    <span className=\"error\">{errors.phone}</span>\r\n                                                )}\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className=\"form-large-item\">\r\n                                            <label htmlFor=\"address\">Address</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"address\"\r\n                                                id=\"address\"\r\n                                                value={values.address}\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                className={\r\n                                                    errors.address && touched.address ? \"input-error\" : null\r\n                                                }\r\n                                            />\r\n                                            {errors.address && touched.address && (\r\n                                                <span className=\"error\">{errors.address}</span>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        returnBoxError()\r\n                                    }\r\n\r\n\r\n                                    <div className=\"checkout-buttons\">\r\n                                        <Button type={\"button\"} value={\" GO BACK ⯇\"} link={\"/cart\"} width={\"300px\"}\r\n                                                align=\"center\"/>\r\n\r\n\r\n                                        <Button type=\"submit\" value={\"CONTINUE ⯈\"}\r\n                                                onClick={() => onStateErr(isSubmitting)}\r\n                                                width={\"300px\"}\r\n                                                align=\"center\"\r\n                                                link={!(dirty && isValid) ? null : \"/success\"}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </div>\r\n\r\n                        );\r\n                    }}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default СheckoutPage;\r\n\r\n// <button\r\n//     type=\"submit\"\r\n//     className={!(dirty && isValid) ? \"disabled-btn\" : \"\"}\r\n//     disabled={!(dirty && isValid)}\r\n// >\r\n//     Sign In\r\n// </button>","C:\\rubbish\\Web Lab\\lab6\\src\\components\\boxes\\ErrorBox.jsx",[],"C:\\rubbish\\Web Lab\\lab6\\src\\components\\pages\\SuccessPage.jsx",[],"C:\\rubbish\\Web Lab\\lab6\\src\\components\\loading-blocks\\LoaderCatalogBox.jsx",[],{"ruleId":"167","severity":1,"message":"168","line":6,"column":9,"nodeType":"169","messageId":"170","endLine":6,"endColumn":20},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"167","severity":1,"message":"175","line":13,"column":10,"nodeType":"169","messageId":"170","endLine":13,"endColumn":21},{"ruleId":"167","severity":1,"message":"176","line":13,"column":23,"nodeType":"169","messageId":"170","endLine":13,"endColumn":34},{"ruleId":"167","severity":1,"message":"177","line":14,"column":10,"nodeType":"169","messageId":"170","endLine":14,"endColumn":23},{"ruleId":"167","severity":1,"message":"178","line":1,"column":15,"nodeType":"169","messageId":"170","endLine":1,"endColumn":23},{"ruleId":"167","severity":1,"message":"179","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":15},{"ruleId":"167","severity":1,"message":"180","line":19,"column":12,"nodeType":"169","messageId":"170","endLine":19,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":29,"column":37,"nodeType":"183","messageId":"184","endLine":29,"endColumn":39},{"ruleId":"185","severity":1,"message":"186","line":33,"column":7,"nodeType":"187","endLine":33,"endColumn":9,"suggestions":"188"},{"ruleId":"185","severity":1,"message":"189","line":24,"column":7,"nodeType":"187","endLine":24,"endColumn":9,"suggestions":"190"},{"ruleId":null,"fatal":true,"severity":2,"message":"191","line":153,"column":10},{"ruleId":"167","severity":1,"message":"192","line":2,"column":26,"nodeType":"169","messageId":"170","endLine":2,"endColumn":32},{"ruleId":"167","severity":1,"message":"193","line":2,"column":40,"nodeType":"169","messageId":"170","endLine":2,"endColumn":45},{"ruleId":"167","severity":1,"message":"194","line":2,"column":47,"nodeType":"169","messageId":"170","endLine":2,"endColumn":53},{"ruleId":"167","severity":1,"message":"195","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":14},{"ruleId":"167","severity":1,"message":"196","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":16},{"ruleId":"167","severity":1,"message":"197","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":19},{"ruleId":"167","severity":1,"message":"198","line":7,"column":8,"nodeType":"169","messageId":"170","endLine":7,"endColumn":16},{"ruleId":"167","severity":1,"message":"175","line":6,"column":22,"nodeType":"169","messageId":"170","endLine":6,"endColumn":33},{"ruleId":"167","severity":1,"message":"199","line":11,"column":9,"nodeType":"169","messageId":"170","endLine":11,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":28,"column":30,"nodeType":"183","messageId":"184","endLine":28,"endColumn":32},{"ruleId":"181","severity":1,"message":"182","line":32,"column":30,"nodeType":"183","messageId":"184","endLine":32,"endColumn":32},{"ruleId":"167","severity":1,"message":"200","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},{"ruleId":"167","severity":1,"message":"201","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":13},{"ruleId":"167","severity":1,"message":"202","line":9,"column":11,"nodeType":"169","messageId":"170","endLine":9,"endColumn":26},{"ruleId":"181","severity":1,"message":"182","line":22,"column":53,"nodeType":"183","messageId":"184","endLine":22,"endColumn":55},{"ruleId":"181","severity":1,"message":"203","line":11,"column":48,"nodeType":"183","messageId":"184","endLine":11,"endColumn":50},{"ruleId":"167","severity":1,"message":"204","line":9,"column":10,"nodeType":"169","messageId":"170","endLine":9,"endColumn":18},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","no-native-reassign",["205"],"no-negated-in-lhs",["206"],"'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'fetchPrinters' is defined but never used.","'useState' is defined but never used.","'cartImg' is defined but never used.","'itemVal' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onSelectItem'. Either include it or remove the dependency array.","ArrayExpression",["207"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'items.length'. Either include them or remove the dependency array.",["208"],"Parsing error: Identifier 'CatalogPage' has already been declared\n\n\u001b[0m \u001b[90m 151 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 152 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 153 | \u001b[39m\u001b[36mfunction\u001b[39m \u001b[33mCatalogPage\u001b[39m() {\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 154 | \u001b[39m    \u001b[36mconst\u001b[39m dispatch \u001b[33m=\u001b[39m useDispatch()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 155 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 156 | \u001b[39m    \u001b[36mconst\u001b[39m items \u001b[33m=\u001b[39m useSelector(({printers}) \u001b[33m=>\u001b[39m printers\u001b[33m.\u001b[39mitems)\u001b[33m;\u001b[39m\u001b[0m","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Header' is defined but never used.","'HomePage' is defined but never used.","'CatalogPage' is defined but never used.","'CartPage' is defined but never used.","'changeCategory' is defined but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'dispatchAddItem' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [onSelectItem]",{"range":"213","text":"214"},"Update the dependencies array to be: [dispatch, items.length]",{"range":"215","text":"216"},[1058,1060],"[onSelectItem]",[842,844],"[dispatch, items.length]"]